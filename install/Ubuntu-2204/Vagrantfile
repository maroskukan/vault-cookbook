Vagrant.configure("2") do |config|

  # Hyper-V Provider Specific Configuration
  config.vm.provider "hyperv" do |h|
    h.enable_virtualization_extensions = true
    h.linked_clone = true
    h.memory = 2048
    h.maxmemory = 2048
  end

  # Virtualbox Provider Specific Configuration
  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.cpus = 2
  end

  config.vm.define "vault" do |vault|
    # VM Shared Configuration
    vault.vm.box = "generic/ubuntu2204"
    vault.vm.hostname = "vault"

    # Hyper-V VM Specific Configuration
    vault.vm.provider 'hyperv' do |h, override|
      override.vm.synced_folder ".", "/vagrant", type: "rsync"
      override.vm.network "public_network", bridge: "Default Switch"
    end

    # Virtualbox VM Specific Configuration
    vault.vm.provider 'virtualbox' do |v, override|
      override.vm.synced_folder ".", "/vagrant"
    end
  end

  # VM Shared Provisioning
  config.vm.provision "install", type: "ansible" do |install|
    install.playbook = "vault-install.yml"
  end

  config.vm.provision "init", type: "ansible" do |init|
    init.playbook = "vault-initialize.yml"
    init.extra_vars = {
      unseal_keys_dir_output: "./init_unseal",
      root_token_dir_output: "./init_root"
    }
  end

  config.vm.provision "unseal", type: "ansible" do |unseal|
    unseal.playbook = "vault-unseal.yml"
    unseal.extra_vars = {
      unseal_keys_dir_output: "./init_unseal",
      root_token_dir_output: "./init_root"
    }
  end
end